<Project>
  <Name>VRLife</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>VoiceStream</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>MicrophoneStream</Name>
        <Access>Public</Access>
        <Location left="521" top="72" />
        <Size width="162" height="230" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public int BitsPerSample = 16</Member>
        <Member type="Field">public int Channels = 1</Member>
        <Member type="Field">public int SampleRate = 44100</Member>
        <Member type="Field">int DeviceId = 0</Member>
        <Member type="Constructor">public MicrophoneStream()</Member>
        <Member type="Constructor">public MicrophoneStream(int deviceId)</Member>
        <Member type="Constructor">public MicrophoneStream(int deviceId, int sampleRate, int channels)</Member>
        <Member type="Constructor">public MicrophoneStream(int deviceId, int sampleRate, int bitsPerSample, int channels)</Member>
        <Member type="Method">public IWaveProvider GetWaveProvider()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VoiceStream</Name>
        <Access>Public</Access>
        <Location left="958" top="526" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public IHighLevelVoiceEffect[] highLevelEffects</Member>
        <Member type="Field">public ILowLevelVoiceEffect[] lowLevelEffects</Member>
        <Member type="Field">public MicrophoneStream microphoneStream</Member>
        <Member type="Constructor">public VoiceStream()</Member>
        <Member type="Constructor">public VoiceStream(List&lt;ILowLevelVoiceEffect&gt; lowLevelChain, List&lt;IHighLevelVoiceEffect&gt; highLevelChain)</Member>
        <Member type="Constructor">public VoiceStream(ILowLevelVoiceEffect[] lowLevelChain, IHighLevelVoiceEffect[] highLevelChain)</Member>
        <Member type="Method">public Task&lt;byte[]&gt; GetBufferAsync()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IHighLevelVoiceEffect</Name>
        <Access>Public</Access>
        <Location left="1331" top="274" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Task&lt;VoiceStreamStruct&gt; ProccessAsync(Task&lt;VoiceStreamStruct&gt; data)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ILowLevelVoiceEffect</Name>
        <Access>Public</Access>
        <Location left="521" top="543" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">byte[] Proccess(byte[] data)</Member>
      </Entity>
      <Entity type="Structure">
        <Name>VoiceStreamStruct</Name>
        <Access>Public</Access>
        <Location left="1009" top="55" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">float ChannelBalance = 0</Member>
        <Member type="Field">int Volume = 100</Member>
        <Member type="Field">bool UnderNoiseLevel</Member>
        <Member type="Method">public byte[] Proccess(byte[] data, MicrophoneStream stream)</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="1" second="3">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="1" second="2">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="1" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="2" second="4">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="1" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>VoIP</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>VoIP</Name>
        <Access>Public</Access>
        <Location left="109" top="47" />
        <Size width="162" height="247" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int intputDeviceId</Member>
        <Member type="Field">int outputDeviceId</Member>
        <Member type="Field">public INetworking Net</Member>
        <Member type="Field">VoiceStream UserVoiceStream</Member>
        <Member type="Field">ConcurrentQueue&lt;VoiceMsg&gt; NetworkQueue</Member>
        <Member type="Field">List&lt;IVoIPUser&gt; Users</Member>
        <Member type="Constructor">public VoIP(INetworking net)</Member>
        <Member type="Constructor">public VoIP(INetworking net, int inputDeviceId, int outputDeviceId)</Member>
        <Member type="Constructor">public VoIP()</Member>
        <Member type="Method">public void Run()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>VoIPAsyncWrapper</Name>
        <Access>Public</Access>
        <Location left="409" top="47" />
        <Size width="224" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public VoIPAsyncWrapper()</Member>
        <Member type="Constructor">public VoIPAsyncWrapper(INetworking net)</Member>
        <Member type="Constructor">public VoIPAsyncWrapper(INetworking net, int inputDeviceId, int outputDeviceId)</Member>
        <Member type="Method">public void ProccessMessage(MsgHeader header, VoIPMsg msg)</Member>
        <Member type="Method">public void Start()</Member>
        <Member type="Method">public void Stop()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IVoIPUser</Name>
        <Access>Public</Access>
        <Location left="109" top="358" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string GetName()</Member>
        <Member type="Method">IPEndPoint GetIP()</Member>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Dependency" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
      <Relationship type="Dependency" first="0" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Networking</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>INetworking</Name>
        <Access>Public</Access>
        <Location left="822" top="96" />
        <Size width="246" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">ProtocolType GetProtocol()</Member>
        <Member type="Method">void IsTCP()</Member>
        <Member type="Method">void Send(byte[] data)</Member>
        <Member type="Method">void Send(byte[] data, IPEndPoint ip)</Member>
        <Member type="Method">void Start()</Member>
        <Member type="Method">void Stop()</Member>
        <Member type="Method">void SetRouter(Action router)</Member>
      </Entity>
      <Entity type="Class">
        <Name>P2PNetworking</Name>
        <Access>Public</Access>
        <Location left="1178" top="312" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ServerClientNetworking</Name>
        <Access>Public</Access>
        <Location left="1178" top="42" />
        <Size width="162" height="77" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="1" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
      <Relationship type="Association" first="2" second="0">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Association</AssociationType>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>ModuleAPIs</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>PlayerAPI</Name>
        <Access>Public</Access>
        <Location left="234" top="78" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RoomAPI</Name>
        <Access>Public</Access>
        <Location left="523" top="78" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public List&lt;PlayerAPI&gt; GetPlayers()</Member>
        <Member type="Method">public void AddObject()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IModule</Name>
        <Access>Public</Access>
        <Location left="843" top="78" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">bool IsUIModule()</Member>
        <Member type="Method">void IsRoomModule()</Member>
        <Member type="Method">bool IsObjectModule()</Member>
        <Member type="Method">static IModule ModuleFactory(RoomAPI roomApi)</Member>
        <Member type="Property">RoomAPI RoomApi { get; set; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>UIModule</Name>
        <Access>Public</Access>
        <Location left="843" top="393" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RoomModule</Name>
        <Access>Public</Access>
        <Location left="1160" top="78" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ObjectModule</Name>
        <Access>Public</Access>
        <Location left="1160" top="393" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
</Project>