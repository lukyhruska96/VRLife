// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VrLifeServer.Database;

namespace VrLifeServer.Migrations
{
    [DbContext(typeof(VrLifeDbContext))]
    [Migration("20200711120244_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VrLifeServer.Database.DbModels.AppData", b =>
                {
                    b.Property<ulong>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("AppId")
                        .HasColumnType("bigint unsigned");

                    b.Property<double>("DecimalValue")
                        .HasColumnType("double");

                    b.Property<ulong>("FieldId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("NumericValue")
                        .HasColumnType("bigint");

                    b.Property<string>("StringValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("RecordId");

                    b.ToTable("AppData");
                });

            modelBuilder.Entity("VrLifeServer.Database.DbModels.User", b =>
                {
                    b.Property<ulong>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Passphrase")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
