// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserMsg.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VrLifeServer.Networking.NetworkingModels {

  /// <summary>Holder for reflection information generated from UserMsg.proto</summary>
  public static partial class UserMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for UserMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1Vc2VyTXNnLnByb3RvEihWckxpZmVTZXJ2ZXIuTmV0d29ya2luZy5OZXR3",
            "b3JraW5nTW9kZWxzIqoBCgpVc2VyTW5nTXNnEkQKB2F1dGhNc2cYASABKAsy",
            "MS5WckxpZmVTZXJ2ZXIuTmV0d29ya2luZy5OZXR3b3JraW5nTW9kZWxzLkF1",
            "dGhNc2dIABJECgd1c2VyTXNnGAIgASgLMjEuVnJMaWZlU2VydmVyLk5ldHdv",
            "cmtpbmcuTmV0d29ya2luZ01vZGVscy5Vc2VyTXNnSABCEAoOVXNlck1uZ01z",
            "Z1R5cGUiLQoHQXV0aE1zZxIQCgh1c2VybmFtZRgBIAEoCRIQCghwYXNzd29y",
            "ZBgCIAEoCSKMAgoHVXNlck1zZxJQCg11c2VyRGV0YWlsTXNnGAEgASgLMjcu",
            "VnJMaWZlU2VydmVyLk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5Vc2Vy",
            "RGV0YWlsTXNnSAASTAoLdXNlckxpc3RNc2cYAiABKAsyNS5WckxpZmVTZXJ2",
            "ZXIuTmV0d29ya2luZy5OZXR3b3JraW5nTW9kZWxzLlVzZXJMaXN0TXNnSAAS",
            "UgoOdXNlclJlcXVlc3RNc2cYAyABKAsyOC5WckxpZmVTZXJ2ZXIuTmV0d29y",
            "a2luZy5OZXR3b3JraW5nTW9kZWxzLlVzZXJSZXF1ZXN0TXNnSABCDQoLVXNl",
            "ck1zZ1R5cGUiQwoNVXNlckRldGFpbE1zZxIOCgZ1c2VySWQYASABKAQSEAoI",
            "dXNlcm5hbWUYAiABKAkSEAoIcGFzc3dvcmQYAyABKAkiVQoLVXNlckxpc3RN",
            "c2cSRgoFdXNlcnMYASADKAsyNy5WckxpZmVTZXJ2ZXIuTmV0d29ya2luZy5O",
            "ZXR3b3JraW5nTW9kZWxzLlVzZXJEZXRhaWxNc2cipwIKDlVzZXJSZXF1ZXN0",
            "TXNnEkwKCWxpc3RRdWVyeRgBIAEoCzI3LlZyTGlmZVNlcnZlci5OZXR3b3Jr",
            "aW5nLk5ldHdvcmtpbmdNb2RlbHMuVXNlckRldGFpbE1zZ0gAEhQKCnVzZXJE",
            "ZXRhaWwYAiABKARIABJOCgt1cGRhdGVRdWVyeRgDIAEoCzI3LlZyTGlmZVNl",
            "cnZlci5OZXR3b3JraW5nLk5ldHdvcmtpbmdNb2RlbHMuVXNlckRldGFpbE1z",
            "Z0gAEk4KC2NyZWF0ZVF1ZXJ5GAQgASgLMjcuVnJMaWZlU2VydmVyLk5ldHdv",
            "cmtpbmcuTmV0d29ya2luZ01vZGVscy5Vc2VyRGV0YWlsTXNnSABCEQoPVXNl",
            "clJlcXVlc3RUeXBlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeServer.Networking.NetworkingModels.UserMngMsg), global::VrLifeServer.Networking.NetworkingModels.UserMngMsg.Parser, new[]{ "AuthMsg", "UserMsg" }, new[]{ "UserMngMsgType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeServer.Networking.NetworkingModels.AuthMsg), global::VrLifeServer.Networking.NetworkingModels.AuthMsg.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeServer.Networking.NetworkingModels.UserMsg), global::VrLifeServer.Networking.NetworkingModels.UserMsg.Parser, new[]{ "UserDetailMsg", "UserListMsg", "UserRequestMsg" }, new[]{ "UserMsgType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg), global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg.Parser, new[]{ "UserId", "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeServer.Networking.NetworkingModels.UserListMsg), global::VrLifeServer.Networking.NetworkingModels.UserListMsg.Parser, new[]{ "Users" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeServer.Networking.NetworkingModels.UserRequestMsg), global::VrLifeServer.Networking.NetworkingModels.UserRequestMsg.Parser, new[]{ "ListQuery", "UserDetail", "UpdateQuery", "CreateQuery" }, new[]{ "UserRequestType" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  user, lobby and group management message
  /// </summary>
  public sealed partial class UserMngMsg : pb::IMessage<UserMngMsg> {
    private static readonly pb::MessageParser<UserMngMsg> _parser = new pb::MessageParser<UserMngMsg>(() => new UserMngMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMngMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeServer.Networking.NetworkingModels.UserMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMngMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMngMsg(UserMngMsg other) : this() {
      switch (other.UserMngMsgTypeCase) {
        case UserMngMsgTypeOneofCase.AuthMsg:
          AuthMsg = other.AuthMsg.Clone();
          break;
        case UserMngMsgTypeOneofCase.UserMsg:
          UserMsg = other.UserMsg.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMngMsg Clone() {
      return new UserMngMsg(this);
    }

    /// <summary>Field number for the "authMsg" field.</summary>
    public const int AuthMsgFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.AuthMsg AuthMsg {
      get { return userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.AuthMsg ? (global::VrLifeServer.Networking.NetworkingModels.AuthMsg) userMngMsgType_ : null; }
      set {
        userMngMsgType_ = value;
        userMngMsgTypeCase_ = value == null ? UserMngMsgTypeOneofCase.None : UserMngMsgTypeOneofCase.AuthMsg;
      }
    }

    /// <summary>Field number for the "userMsg" field.</summary>
    public const int UserMsgFieldNumber = 2;
    /// <summary>
    /// GroupMsg groupMsg = 3;
    /// LobbyMsg lobbyMsg = 4;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.UserMsg UserMsg {
      get { return userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.UserMsg ? (global::VrLifeServer.Networking.NetworkingModels.UserMsg) userMngMsgType_ : null; }
      set {
        userMngMsgType_ = value;
        userMngMsgTypeCase_ = value == null ? UserMngMsgTypeOneofCase.None : UserMngMsgTypeOneofCase.UserMsg;
      }
    }

    private object userMngMsgType_;
    /// <summary>Enum of possible cases for the "UserMngMsgType" oneof.</summary>
    public enum UserMngMsgTypeOneofCase {
      None = 0,
      AuthMsg = 1,
      UserMsg = 2,
    }
    private UserMngMsgTypeOneofCase userMngMsgTypeCase_ = UserMngMsgTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMngMsgTypeOneofCase UserMngMsgTypeCase {
      get { return userMngMsgTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserMngMsgType() {
      userMngMsgTypeCase_ = UserMngMsgTypeOneofCase.None;
      userMngMsgType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMngMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMngMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuthMsg, other.AuthMsg)) return false;
      if (!object.Equals(UserMsg, other.UserMsg)) return false;
      if (UserMngMsgTypeCase != other.UserMngMsgTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.AuthMsg) hash ^= AuthMsg.GetHashCode();
      if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.UserMsg) hash ^= UserMsg.GetHashCode();
      hash ^= (int) userMngMsgTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.AuthMsg) {
        output.WriteRawTag(10);
        output.WriteMessage(AuthMsg);
      }
      if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.UserMsg) {
        output.WriteRawTag(18);
        output.WriteMessage(UserMsg);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.AuthMsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthMsg);
      }
      if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.UserMsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMsg);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMngMsg other) {
      if (other == null) {
        return;
      }
      switch (other.UserMngMsgTypeCase) {
        case UserMngMsgTypeOneofCase.AuthMsg:
          AuthMsg = other.AuthMsg;
          break;
        case UserMngMsgTypeOneofCase.UserMsg:
          UserMsg = other.UserMsg;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::VrLifeServer.Networking.NetworkingModels.AuthMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.AuthMsg();
            if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.AuthMsg) {
              subBuilder.MergeFrom(AuthMsg);
            }
            input.ReadMessage(subBuilder);
            AuthMsg = subBuilder;
            break;
          }
          case 18: {
            global::VrLifeServer.Networking.NetworkingModels.UserMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.UserMsg();
            if (userMngMsgTypeCase_ == UserMngMsgTypeOneofCase.UserMsg) {
              subBuilder.MergeFrom(UserMsg);
            }
            input.ReadMessage(subBuilder);
            UserMsg = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthMsg : pb::IMessage<AuthMsg> {
    private static readonly pb::MessageParser<AuthMsg> _parser = new pb::MessageParser<AuthMsg>(() => new AuthMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeServer.Networking.NetworkingModels.UserMsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthMsg(AuthMsg other) : this() {
      username_ = other.username_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthMsg Clone() {
      return new AuthMsg(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthMsg other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserMsg : pb::IMessage<UserMsg> {
    private static readonly pb::MessageParser<UserMsg> _parser = new pb::MessageParser<UserMsg>(() => new UserMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeServer.Networking.NetworkingModels.UserMsgReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMsg(UserMsg other) : this() {
      switch (other.UserMsgTypeCase) {
        case UserMsgTypeOneofCase.UserDetailMsg:
          UserDetailMsg = other.UserDetailMsg.Clone();
          break;
        case UserMsgTypeOneofCase.UserListMsg:
          UserListMsg = other.UserListMsg.Clone();
          break;
        case UserMsgTypeOneofCase.UserRequestMsg:
          UserRequestMsg = other.UserRequestMsg.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMsg Clone() {
      return new UserMsg(this);
    }

    /// <summary>Field number for the "userDetailMsg" field.</summary>
    public const int UserDetailMsgFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg UserDetailMsg {
      get { return userMsgTypeCase_ == UserMsgTypeOneofCase.UserDetailMsg ? (global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg) userMsgType_ : null; }
      set {
        userMsgType_ = value;
        userMsgTypeCase_ = value == null ? UserMsgTypeOneofCase.None : UserMsgTypeOneofCase.UserDetailMsg;
      }
    }

    /// <summary>Field number for the "userListMsg" field.</summary>
    public const int UserListMsgFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.UserListMsg UserListMsg {
      get { return userMsgTypeCase_ == UserMsgTypeOneofCase.UserListMsg ? (global::VrLifeServer.Networking.NetworkingModels.UserListMsg) userMsgType_ : null; }
      set {
        userMsgType_ = value;
        userMsgTypeCase_ = value == null ? UserMsgTypeOneofCase.None : UserMsgTypeOneofCase.UserListMsg;
      }
    }

    /// <summary>Field number for the "userRequestMsg" field.</summary>
    public const int UserRequestMsgFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.UserRequestMsg UserRequestMsg {
      get { return userMsgTypeCase_ == UserMsgTypeOneofCase.UserRequestMsg ? (global::VrLifeServer.Networking.NetworkingModels.UserRequestMsg) userMsgType_ : null; }
      set {
        userMsgType_ = value;
        userMsgTypeCase_ = value == null ? UserMsgTypeOneofCase.None : UserMsgTypeOneofCase.UserRequestMsg;
      }
    }

    private object userMsgType_;
    /// <summary>Enum of possible cases for the "UserMsgType" oneof.</summary>
    public enum UserMsgTypeOneofCase {
      None = 0,
      UserDetailMsg = 1,
      UserListMsg = 2,
      UserRequestMsg = 3,
    }
    private UserMsgTypeOneofCase userMsgTypeCase_ = UserMsgTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMsgTypeOneofCase UserMsgTypeCase {
      get { return userMsgTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserMsgType() {
      userMsgTypeCase_ = UserMsgTypeOneofCase.None;
      userMsgType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserDetailMsg, other.UserDetailMsg)) return false;
      if (!object.Equals(UserListMsg, other.UserListMsg)) return false;
      if (!object.Equals(UserRequestMsg, other.UserRequestMsg)) return false;
      if (UserMsgTypeCase != other.UserMsgTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserDetailMsg) hash ^= UserDetailMsg.GetHashCode();
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserListMsg) hash ^= UserListMsg.GetHashCode();
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserRequestMsg) hash ^= UserRequestMsg.GetHashCode();
      hash ^= (int) userMsgTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserDetailMsg) {
        output.WriteRawTag(10);
        output.WriteMessage(UserDetailMsg);
      }
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserListMsg) {
        output.WriteRawTag(18);
        output.WriteMessage(UserListMsg);
      }
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserRequestMsg) {
        output.WriteRawTag(26);
        output.WriteMessage(UserRequestMsg);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserDetailMsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserDetailMsg);
      }
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserListMsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserListMsg);
      }
      if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserRequestMsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserRequestMsg);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMsg other) {
      if (other == null) {
        return;
      }
      switch (other.UserMsgTypeCase) {
        case UserMsgTypeOneofCase.UserDetailMsg:
          UserDetailMsg = other.UserDetailMsg;
          break;
        case UserMsgTypeOneofCase.UserListMsg:
          UserListMsg = other.UserListMsg;
          break;
        case UserMsgTypeOneofCase.UserRequestMsg:
          UserRequestMsg = other.UserRequestMsg;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg();
            if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserDetailMsg) {
              subBuilder.MergeFrom(UserDetailMsg);
            }
            input.ReadMessage(subBuilder);
            UserDetailMsg = subBuilder;
            break;
          }
          case 18: {
            global::VrLifeServer.Networking.NetworkingModels.UserListMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.UserListMsg();
            if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserListMsg) {
              subBuilder.MergeFrom(UserListMsg);
            }
            input.ReadMessage(subBuilder);
            UserListMsg = subBuilder;
            break;
          }
          case 26: {
            global::VrLifeServer.Networking.NetworkingModels.UserRequestMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.UserRequestMsg();
            if (userMsgTypeCase_ == UserMsgTypeOneofCase.UserRequestMsg) {
              subBuilder.MergeFrom(UserRequestMsg);
            }
            input.ReadMessage(subBuilder);
            UserRequestMsg = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserDetailMsg : pb::IMessage<UserDetailMsg> {
    private static readonly pb::MessageParser<UserDetailMsg> _parser = new pb::MessageParser<UserDetailMsg>(() => new UserDetailMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserDetailMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeServer.Networking.NetworkingModels.UserMsgReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDetailMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDetailMsg(UserDetailMsg other) : this() {
      userId_ = other.userId_;
      username_ = other.username_;
      password_ = other.password_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserDetailMsg Clone() {
      return new UserDetailMsg(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserDetailMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserDetailMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserDetailMsg other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserListMsg : pb::IMessage<UserListMsg> {
    private static readonly pb::MessageParser<UserListMsg> _parser = new pb::MessageParser<UserListMsg>(() => new UserListMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserListMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeServer.Networking.NetworkingModels.UserMsgReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserListMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserListMsg(UserListMsg other) : this() {
      users_ = other.users_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserListMsg Clone() {
      return new UserListMsg(this);
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg> _repeated_users_codec
        = pb::FieldCodec.ForMessage(10, global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg.Parser);
    private readonly pbc::RepeatedField<global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg> users_ = new pbc::RepeatedField<global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg> Users {
      get { return users_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserListMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserListMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!users_.Equals(other.users_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= users_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      users_.WriteTo(output, _repeated_users_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += users_.CalculateSize(_repeated_users_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserListMsg other) {
      if (other == null) {
        return;
      }
      users_.Add(other.users_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserRequestMsg : pb::IMessage<UserRequestMsg> {
    private static readonly pb::MessageParser<UserRequestMsg> _parser = new pb::MessageParser<UserRequestMsg>(() => new UserRequestMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRequestMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeServer.Networking.NetworkingModels.UserMsgReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequestMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequestMsg(UserRequestMsg other) : this() {
      switch (other.UserRequestTypeCase) {
        case UserRequestTypeOneofCase.ListQuery:
          ListQuery = other.ListQuery.Clone();
          break;
        case UserRequestTypeOneofCase.UserDetail:
          UserDetail = other.UserDetail;
          break;
        case UserRequestTypeOneofCase.UpdateQuery:
          UpdateQuery = other.UpdateQuery.Clone();
          break;
        case UserRequestTypeOneofCase.CreateQuery:
          CreateQuery = other.CreateQuery.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequestMsg Clone() {
      return new UserRequestMsg(this);
    }

    /// <summary>Field number for the "listQuery" field.</summary>
    public const int ListQueryFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg ListQuery {
      get { return userRequestTypeCase_ == UserRequestTypeOneofCase.ListQuery ? (global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg) userRequestType_ : null; }
      set {
        userRequestType_ = value;
        userRequestTypeCase_ = value == null ? UserRequestTypeOneofCase.None : UserRequestTypeOneofCase.ListQuery;
      }
    }

    /// <summary>Field number for the "userDetail" field.</summary>
    public const int UserDetailFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserDetail {
      get { return userRequestTypeCase_ == UserRequestTypeOneofCase.UserDetail ? (ulong) userRequestType_ : 0UL; }
      set {
        userRequestType_ = value;
        userRequestTypeCase_ = UserRequestTypeOneofCase.UserDetail;
      }
    }

    /// <summary>Field number for the "updateQuery" field.</summary>
    public const int UpdateQueryFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg UpdateQuery {
      get { return userRequestTypeCase_ == UserRequestTypeOneofCase.UpdateQuery ? (global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg) userRequestType_ : null; }
      set {
        userRequestType_ = value;
        userRequestTypeCase_ = value == null ? UserRequestTypeOneofCase.None : UserRequestTypeOneofCase.UpdateQuery;
      }
    }

    /// <summary>Field number for the "createQuery" field.</summary>
    public const int CreateQueryFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg CreateQuery {
      get { return userRequestTypeCase_ == UserRequestTypeOneofCase.CreateQuery ? (global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg) userRequestType_ : null; }
      set {
        userRequestType_ = value;
        userRequestTypeCase_ = value == null ? UserRequestTypeOneofCase.None : UserRequestTypeOneofCase.CreateQuery;
      }
    }

    private object userRequestType_;
    /// <summary>Enum of possible cases for the "UserRequestType" oneof.</summary>
    public enum UserRequestTypeOneofCase {
      None = 0,
      ListQuery = 1,
      UserDetail = 2,
      UpdateQuery = 3,
      CreateQuery = 4,
    }
    private UserRequestTypeOneofCase userRequestTypeCase_ = UserRequestTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequestTypeOneofCase UserRequestTypeCase {
      get { return userRequestTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserRequestType() {
      userRequestTypeCase_ = UserRequestTypeOneofCase.None;
      userRequestType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRequestMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRequestMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ListQuery, other.ListQuery)) return false;
      if (UserDetail != other.UserDetail) return false;
      if (!object.Equals(UpdateQuery, other.UpdateQuery)) return false;
      if (!object.Equals(CreateQuery, other.CreateQuery)) return false;
      if (UserRequestTypeCase != other.UserRequestTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.ListQuery) hash ^= ListQuery.GetHashCode();
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.UserDetail) hash ^= UserDetail.GetHashCode();
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.UpdateQuery) hash ^= UpdateQuery.GetHashCode();
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.CreateQuery) hash ^= CreateQuery.GetHashCode();
      hash ^= (int) userRequestTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.ListQuery) {
        output.WriteRawTag(10);
        output.WriteMessage(ListQuery);
      }
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.UserDetail) {
        output.WriteRawTag(16);
        output.WriteUInt64(UserDetail);
      }
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.UpdateQuery) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateQuery);
      }
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.CreateQuery) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateQuery);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.ListQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListQuery);
      }
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.UserDetail) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserDetail);
      }
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.UpdateQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateQuery);
      }
      if (userRequestTypeCase_ == UserRequestTypeOneofCase.CreateQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateQuery);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRequestMsg other) {
      if (other == null) {
        return;
      }
      switch (other.UserRequestTypeCase) {
        case UserRequestTypeOneofCase.ListQuery:
          ListQuery = other.ListQuery;
          break;
        case UserRequestTypeOneofCase.UserDetail:
          UserDetail = other.UserDetail;
          break;
        case UserRequestTypeOneofCase.UpdateQuery:
          UpdateQuery = other.UpdateQuery;
          break;
        case UserRequestTypeOneofCase.CreateQuery:
          CreateQuery = other.CreateQuery;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg();
            if (userRequestTypeCase_ == UserRequestTypeOneofCase.ListQuery) {
              subBuilder.MergeFrom(ListQuery);
            }
            input.ReadMessage(subBuilder);
            ListQuery = subBuilder;
            break;
          }
          case 16: {
            UserDetail = input.ReadUInt64();
            break;
          }
          case 26: {
            global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg();
            if (userRequestTypeCase_ == UserRequestTypeOneofCase.UpdateQuery) {
              subBuilder.MergeFrom(UpdateQuery);
            }
            input.ReadMessage(subBuilder);
            UpdateQuery = subBuilder;
            break;
          }
          case 34: {
            global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg subBuilder = new global::VrLifeServer.Networking.NetworkingModels.UserDetailMsg();
            if (userRequestTypeCase_ == UserRequestTypeOneofCase.CreateQuery) {
              subBuilder.MergeFrom(CreateQuery);
            }
            input.ReadMessage(subBuilder);
            CreateQuery = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
