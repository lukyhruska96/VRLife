// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataTypes.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using System;
using System.Numerics;
using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VrLifeShared.Networking.NetworkingModels {

  /// <summary>Holder for reflection information generated from DataTypes.proto</summary>
  public static partial class DataTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for DataTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9EYXRhVHlwZXMucHJvdG8SKFZyTGlmZVNoYXJlZC5OZXR3b3JraW5nLk5l",
            "dHdvcmtpbmdNb2RlbHMihwgKCFNrZWxldG9uEg4KBnVzZXJJZBgBIAEoBBJF",
            "Cgxib2R5TG9jYXRpb24YAiABKAsyLy5WckxpZmVTaGFyZWQuTmV0d29ya2lu",
            "Zy5OZXR3b3JraW5nTW9kZWxzLkNvb3JkEj0KBGhlYWQYAyABKAsyLy5Wckxp",
            "ZmVTaGFyZWQuTmV0d29ya2luZy5OZXR3b3JraW5nTW9kZWxzLkNvb3JkEj0K",
            "BG5lY2sYBCABKAsyLy5WckxpZmVTaGFyZWQuTmV0d29ya2luZy5OZXR3b3Jr",
            "aW5nTW9kZWxzLkNvb3JkEj4KBXNwaW5lGAUgASgLMi8uVnJMaWZlU2hhcmVk",
            "Lk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5Db29yZBI9CgRoaXBzGAYg",
            "ASgLMi8uVnJMaWZlU2hhcmVkLk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVs",
            "cy5Db29yZBJFCgxsZWZ0U2hvdWxkZXIYByABKAsyLy5WckxpZmVTaGFyZWQu",
            "TmV0d29ya2luZy5OZXR3b3JraW5nTW9kZWxzLkNvb3JkEkAKB2xlZnRBcm0Y",
            "CCABKAsyLy5WckxpZmVTaGFyZWQuTmV0d29ya2luZy5OZXR3b3JraW5nTW9k",
            "ZWxzLkNvb3JkEkEKCGxlZnRIYW5kGAkgASgLMi8uVnJMaWZlU2hhcmVkLk5l",
            "dHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5Db29yZBJGCg1yaWdodFNob3Vs",
            "ZGVyGAogASgLMi8uVnJMaWZlU2hhcmVkLk5ldHdvcmtpbmcuTmV0d29ya2lu",
            "Z01vZGVscy5Db29yZBJBCghyaWdodEFybRgLIAEoCzIvLlZyTGlmZVNoYXJl",
            "ZC5OZXR3b3JraW5nLk5ldHdvcmtpbmdNb2RlbHMuQ29vcmQSQgoJcmlnaHRI",
            "YW5kGAwgASgLMi8uVnJMaWZlU2hhcmVkLk5ldHdvcmtpbmcuTmV0d29ya2lu",
            "Z01vZGVscy5Db29yZBJBCghsZWZ0S25lZRgNIAEoCzIvLlZyTGlmZVNoYXJl",
            "ZC5OZXR3b3JraW5nLk5ldHdvcmtpbmdNb2RlbHMuQ29vcmQSQQoIbGVmdEZv",
            "b3QYDiABKAsyLy5WckxpZmVTaGFyZWQuTmV0d29ya2luZy5OZXR3b3JraW5n",
            "TW9kZWxzLkNvb3JkEkIKCXJpZ2h0S25lZRgPIAEoCzIvLlZyTGlmZVNoYXJl",
            "ZC5OZXR3b3JraW5nLk5ldHdvcmtpbmdNb2RlbHMuQ29vcmQSQgoJcmlnaHRG",
            "b290GBAgASgLMi8uVnJMaWZlU2hhcmVkLk5ldHdvcmtpbmcuTmV0d29ya2lu",
            "Z01vZGVscy5Db29yZCJ7CgpHYW1lT2JqZWN0EhgKEG9iamVjdEluc3RhbmNl",
            "SWQYASABKAQSPwoGY2VudGVyGAIgASgLMi8uVnJMaWZlU2hhcmVkLk5ldHdv",
            "cmtpbmcuTmV0d29ya2luZ01vZGVscy5Db29yZBISCgpvYmplY3REYXRhGAMg",
            "ASgMIigKBUNvb3JkEgkKAXgYASABKAISCQoBeRgCIAEoAhIJCgF6GAMgASgC",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeShared.Networking.NetworkingModels.Skeleton), global::VrLifeShared.Networking.NetworkingModels.Skeleton.Parser, new[]{ "UserId", "BodyLocation", "Head", "Neck", "Spine", "Hips", "LeftShoulder", "LeftArm", "LeftHand", "RightShoulder", "RightArm", "RightHand", "LeftKnee", "LeftFoot", "RightKnee", "RightFoot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeShared.Networking.NetworkingModels.GameObject), global::VrLifeShared.Networking.NetworkingModels.GameObject.Parser, new[]{ "ObjectInstanceId", "Center", "ObjectData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeShared.Networking.NetworkingModels.Coord), global::VrLifeShared.Networking.NetworkingModels.Coord.Parser, new[]{ "X", "Y", "Z" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Skeleton : pb::IMessage<Skeleton> {
    private static readonly pb::MessageParser<Skeleton> _parser = new pb::MessageParser<Skeleton>(() => new Skeleton());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skeleton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeShared.Networking.NetworkingModels.DataTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skeleton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skeleton(Skeleton other) : this() {
      userId_ = other.userId_;
      BodyLocation = other.bodyLocation_ != null ? other.BodyLocation.Clone() : null;
      Head = other.head_ != null ? other.Head.Clone() : null;
      Neck = other.neck_ != null ? other.Neck.Clone() : null;
      Spine = other.spine_ != null ? other.Spine.Clone() : null;
      Hips = other.hips_ != null ? other.Hips.Clone() : null;
      LeftShoulder = other.leftShoulder_ != null ? other.LeftShoulder.Clone() : null;
      LeftArm = other.leftArm_ != null ? other.LeftArm.Clone() : null;
      LeftHand = other.leftHand_ != null ? other.LeftHand.Clone() : null;
      RightShoulder = other.rightShoulder_ != null ? other.RightShoulder.Clone() : null;
      RightArm = other.rightArm_ != null ? other.RightArm.Clone() : null;
      RightHand = other.rightHand_ != null ? other.RightHand.Clone() : null;
      LeftKnee = other.leftKnee_ != null ? other.LeftKnee.Clone() : null;
      LeftFoot = other.leftFoot_ != null ? other.LeftFoot.Clone() : null;
      RightKnee = other.rightKnee_ != null ? other.RightKnee.Clone() : null;
      RightFoot = other.rightFoot_ != null ? other.RightFoot.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skeleton Clone() {
      return new Skeleton(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "bodyLocation" field.</summary>
    public const int BodyLocationFieldNumber = 2;
    private global::VrLifeShared.Networking.NetworkingModels.Coord bodyLocation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord BodyLocation {
      get { return bodyLocation_; }
      set {
        bodyLocation_ = value;
      }
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 3;
    private global::VrLifeShared.Networking.NetworkingModels.Coord head_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "neck" field.</summary>
    public const int NeckFieldNumber = 4;
    private global::VrLifeShared.Networking.NetworkingModels.Coord neck_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord Neck {
      get { return neck_; }
      set {
        neck_ = value;
      }
    }

    /// <summary>Field number for the "spine" field.</summary>
    public const int SpineFieldNumber = 5;
    private global::VrLifeShared.Networking.NetworkingModels.Coord spine_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord Spine {
      get { return spine_; }
      set {
        spine_ = value;
      }
    }

    /// <summary>Field number for the "hips" field.</summary>
    public const int HipsFieldNumber = 6;
    private global::VrLifeShared.Networking.NetworkingModels.Coord hips_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord Hips {
      get { return hips_; }
      set {
        hips_ = value;
      }
    }

    /// <summary>Field number for the "leftShoulder" field.</summary>
    public const int LeftShoulderFieldNumber = 7;
    private global::VrLifeShared.Networking.NetworkingModels.Coord leftShoulder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord LeftShoulder {
      get { return leftShoulder_; }
      set {
        leftShoulder_ = value;
      }
    }

    /// <summary>Field number for the "leftArm" field.</summary>
    public const int LeftArmFieldNumber = 8;
    private global::VrLifeShared.Networking.NetworkingModels.Coord leftArm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord LeftArm {
      get { return leftArm_; }
      set {
        leftArm_ = value;
      }
    }

    /// <summary>Field number for the "leftHand" field.</summary>
    public const int LeftHandFieldNumber = 9;
    private global::VrLifeShared.Networking.NetworkingModels.Coord leftHand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord LeftHand {
      get { return leftHand_; }
      set {
        leftHand_ = value;
      }
    }

    /// <summary>Field number for the "rightShoulder" field.</summary>
    public const int RightShoulderFieldNumber = 10;
    private global::VrLifeShared.Networking.NetworkingModels.Coord rightShoulder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord RightShoulder {
      get { return rightShoulder_; }
      set {
        rightShoulder_ = value;
      }
    }

    /// <summary>Field number for the "rightArm" field.</summary>
    public const int RightArmFieldNumber = 11;
    private global::VrLifeShared.Networking.NetworkingModels.Coord rightArm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord RightArm {
      get { return rightArm_; }
      set {
        rightArm_ = value;
      }
    }

    /// <summary>Field number for the "rightHand" field.</summary>
    public const int RightHandFieldNumber = 12;
    private global::VrLifeShared.Networking.NetworkingModels.Coord rightHand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord RightHand {
      get { return rightHand_; }
      set {
        rightHand_ = value;
      }
    }

    /// <summary>Field number for the "leftKnee" field.</summary>
    public const int LeftKneeFieldNumber = 13;
    private global::VrLifeShared.Networking.NetworkingModels.Coord leftKnee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord LeftKnee {
      get { return leftKnee_; }
      set {
        leftKnee_ = value;
      }
    }

    /// <summary>Field number for the "leftFoot" field.</summary>
    public const int LeftFootFieldNumber = 14;
    private global::VrLifeShared.Networking.NetworkingModels.Coord leftFoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord LeftFoot {
      get { return leftFoot_; }
      set {
        leftFoot_ = value;
      }
    }

    /// <summary>Field number for the "rightKnee" field.</summary>
    public const int RightKneeFieldNumber = 15;
    private global::VrLifeShared.Networking.NetworkingModels.Coord rightKnee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord RightKnee {
      get { return rightKnee_; }
      set {
        rightKnee_ = value;
      }
    }

    /// <summary>Field number for the "rightFoot" field.</summary>
    public const int RightFootFieldNumber = 16;
    private global::VrLifeShared.Networking.NetworkingModels.Coord rightFoot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord RightFoot {
      get { return rightFoot_; }
      set {
        rightFoot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skeleton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skeleton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (!object.Equals(BodyLocation, other.BodyLocation)) return false;
      if (!object.Equals(Head, other.Head)) return false;
      if (!object.Equals(Neck, other.Neck)) return false;
      if (!object.Equals(Spine, other.Spine)) return false;
      if (!object.Equals(Hips, other.Hips)) return false;
      if (!object.Equals(LeftShoulder, other.LeftShoulder)) return false;
      if (!object.Equals(LeftArm, other.LeftArm)) return false;
      if (!object.Equals(LeftHand, other.LeftHand)) return false;
      if (!object.Equals(RightShoulder, other.RightShoulder)) return false;
      if (!object.Equals(RightArm, other.RightArm)) return false;
      if (!object.Equals(RightHand, other.RightHand)) return false;
      if (!object.Equals(LeftKnee, other.LeftKnee)) return false;
      if (!object.Equals(LeftFoot, other.LeftFoot)) return false;
      if (!object.Equals(RightKnee, other.RightKnee)) return false;
      if (!object.Equals(RightFoot, other.RightFoot)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (bodyLocation_ != null) hash ^= BodyLocation.GetHashCode();
      if (head_ != null) hash ^= Head.GetHashCode();
      if (neck_ != null) hash ^= Neck.GetHashCode();
      if (spine_ != null) hash ^= Spine.GetHashCode();
      if (hips_ != null) hash ^= Hips.GetHashCode();
      if (leftShoulder_ != null) hash ^= LeftShoulder.GetHashCode();
      if (leftArm_ != null) hash ^= LeftArm.GetHashCode();
      if (leftHand_ != null) hash ^= LeftHand.GetHashCode();
      if (rightShoulder_ != null) hash ^= RightShoulder.GetHashCode();
      if (rightArm_ != null) hash ^= RightArm.GetHashCode();
      if (rightHand_ != null) hash ^= RightHand.GetHashCode();
      if (leftKnee_ != null) hash ^= LeftKnee.GetHashCode();
      if (leftFoot_ != null) hash ^= LeftFoot.GetHashCode();
      if (rightKnee_ != null) hash ^= RightKnee.GetHashCode();
      if (rightFoot_ != null) hash ^= RightFoot.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (bodyLocation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BodyLocation);
      }
      if (head_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Head);
      }
      if (neck_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Neck);
      }
      if (spine_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Spine);
      }
      if (hips_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Hips);
      }
      if (leftShoulder_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LeftShoulder);
      }
      if (leftArm_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LeftArm);
      }
      if (leftHand_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LeftHand);
      }
      if (rightShoulder_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RightShoulder);
      }
      if (rightArm_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RightArm);
      }
      if (rightHand_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(RightHand);
      }
      if (leftKnee_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LeftKnee);
      }
      if (leftFoot_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(LeftFoot);
      }
      if (rightKnee_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(RightKnee);
      }
      if (rightFoot_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(RightFoot);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (bodyLocation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BodyLocation);
      }
      if (head_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Head);
      }
      if (neck_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Neck);
      }
      if (spine_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spine);
      }
      if (hips_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hips);
      }
      if (leftShoulder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftShoulder);
      }
      if (leftArm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftArm);
      }
      if (leftHand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftHand);
      }
      if (rightShoulder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RightShoulder);
      }
      if (rightArm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RightArm);
      }
      if (rightHand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RightHand);
      }
      if (leftKnee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftKnee);
      }
      if (leftFoot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftFoot);
      }
      if (rightKnee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RightKnee);
      }
      if (rightFoot_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RightFoot);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skeleton other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.bodyLocation_ != null) {
        if (bodyLocation_ == null) {
          bodyLocation_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        BodyLocation.MergeFrom(other.BodyLocation);
      }
      if (other.head_ != null) {
        if (head_ == null) {
          head_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        Head.MergeFrom(other.Head);
      }
      if (other.neck_ != null) {
        if (neck_ == null) {
          neck_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        Neck.MergeFrom(other.Neck);
      }
      if (other.spine_ != null) {
        if (spine_ == null) {
          spine_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        Spine.MergeFrom(other.Spine);
      }
      if (other.hips_ != null) {
        if (hips_ == null) {
          hips_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        Hips.MergeFrom(other.Hips);
      }
      if (other.leftShoulder_ != null) {
        if (leftShoulder_ == null) {
          leftShoulder_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        LeftShoulder.MergeFrom(other.LeftShoulder);
      }
      if (other.leftArm_ != null) {
        if (leftArm_ == null) {
          leftArm_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        LeftArm.MergeFrom(other.LeftArm);
      }
      if (other.leftHand_ != null) {
        if (leftHand_ == null) {
          leftHand_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        LeftHand.MergeFrom(other.LeftHand);
      }
      if (other.rightShoulder_ != null) {
        if (rightShoulder_ == null) {
          rightShoulder_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        RightShoulder.MergeFrom(other.RightShoulder);
      }
      if (other.rightArm_ != null) {
        if (rightArm_ == null) {
          rightArm_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        RightArm.MergeFrom(other.RightArm);
      }
      if (other.rightHand_ != null) {
        if (rightHand_ == null) {
          rightHand_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        RightHand.MergeFrom(other.RightHand);
      }
      if (other.leftKnee_ != null) {
        if (leftKnee_ == null) {
          leftKnee_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        LeftKnee.MergeFrom(other.LeftKnee);
      }
      if (other.leftFoot_ != null) {
        if (leftFoot_ == null) {
          leftFoot_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        LeftFoot.MergeFrom(other.LeftFoot);
      }
      if (other.rightKnee_ != null) {
        if (rightKnee_ == null) {
          rightKnee_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        RightKnee.MergeFrom(other.RightKnee);
      }
      if (other.rightFoot_ != null) {
        if (rightFoot_ == null) {
          rightFoot_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        RightFoot.MergeFrom(other.RightFoot);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (bodyLocation_ == null) {
              bodyLocation_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(bodyLocation_);
            break;
          }
          case 26: {
            if (head_ == null) {
              head_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(head_);
            break;
          }
          case 34: {
            if (neck_ == null) {
              neck_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(neck_);
            break;
          }
          case 42: {
            if (spine_ == null) {
              spine_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(spine_);
            break;
          }
          case 50: {
            if (hips_ == null) {
              hips_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(hips_);
            break;
          }
          case 58: {
            if (leftShoulder_ == null) {
              leftShoulder_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(leftShoulder_);
            break;
          }
          case 66: {
            if (leftArm_ == null) {
              leftArm_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(leftArm_);
            break;
          }
          case 74: {
            if (leftHand_ == null) {
              leftHand_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(leftHand_);
            break;
          }
          case 82: {
            if (rightShoulder_ == null) {
              rightShoulder_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(rightShoulder_);
            break;
          }
          case 90: {
            if (rightArm_ == null) {
              rightArm_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(rightArm_);
            break;
          }
          case 98: {
            if (rightHand_ == null) {
              rightHand_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(rightHand_);
            break;
          }
          case 106: {
            if (leftKnee_ == null) {
              leftKnee_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(leftKnee_);
            break;
          }
          case 114: {
            if (leftFoot_ == null) {
              leftFoot_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(leftFoot_);
            break;
          }
          case 122: {
            if (rightKnee_ == null) {
              rightKnee_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(rightKnee_);
            break;
          }
          case 130: {
            if (rightFoot_ == null) {
              rightFoot_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(rightFoot_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameObject : pb::IMessage<GameObject> {
    private static readonly pb::MessageParser<GameObject> _parser = new pb::MessageParser<GameObject>(() => new GameObject());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeShared.Networking.NetworkingModels.DataTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObject(GameObject other) : this() {
      objectInstanceId_ = other.objectInstanceId_;
      Center = other.center_ != null ? other.Center.Clone() : null;
      objectData_ = other.objectData_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObject Clone() {
      return new GameObject(this);
    }

    /// <summary>Field number for the "objectInstanceId" field.</summary>
    public const int ObjectInstanceIdFieldNumber = 1;
    private ulong objectInstanceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ObjectInstanceId {
      get { return objectInstanceId_; }
      set {
        objectInstanceId_ = value;
      }
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 2;
    private global::VrLifeShared.Networking.NetworkingModels.Coord center_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeShared.Networking.NetworkingModels.Coord Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "objectData" field.</summary>
    public const int ObjectDataFieldNumber = 3;
    private pb::ByteString objectData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ObjectData {
      get { return objectData_; }
      set {
        objectData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectInstanceId != other.ObjectInstanceId) return false;
      if (!object.Equals(Center, other.Center)) return false;
      if (ObjectData != other.ObjectData) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ObjectInstanceId != 0UL) hash ^= ObjectInstanceId.GetHashCode();
      if (center_ != null) hash ^= Center.GetHashCode();
      if (ObjectData.Length != 0) hash ^= ObjectData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectInstanceId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ObjectInstanceId);
      }
      if (center_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Center);
      }
      if (ObjectData.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ObjectData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ObjectInstanceId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ObjectInstanceId);
      }
      if (center_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Center);
      }
      if (ObjectData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ObjectData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameObject other) {
      if (other == null) {
        return;
      }
      if (other.ObjectInstanceId != 0UL) {
        ObjectInstanceId = other.ObjectInstanceId;
      }
      if (other.center_ != null) {
        if (center_ == null) {
          center_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
        }
        Center.MergeFrom(other.Center);
      }
      if (other.ObjectData.Length != 0) {
        ObjectData = other.ObjectData;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ObjectInstanceId = input.ReadUInt64();
            break;
          }
          case 18: {
            if (center_ == null) {
              center_ = new global::VrLifeShared.Networking.NetworkingModels.Coord();
            }
            input.ReadMessage(center_);
            break;
          }
          case 26: {
            ObjectData = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Coord : pb::IMessage<Coord> {
    private static readonly pb::MessageParser<Coord> _parser = new pb::MessageParser<Coord>(() => new Coord());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Coord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeShared.Networking.NetworkingModels.DataTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coord(Coord other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coord Clone() {
      return new Coord(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Coord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Coord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= X.GetHashCode();
      if (Y != 0F) hash ^= Y.GetHashCode();
      if (Z != 0F) hash ^= Z.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Coord other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    }

  #endregion

}

#endregion Designer generated code
