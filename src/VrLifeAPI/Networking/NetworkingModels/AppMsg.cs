// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AppMsg.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VrLifeAPI.Networking.NetworkingModels {

  /// <summary>Holder for reflection information generated from AppMsg.proto</summary>
  public static partial class AppMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for AppMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AppMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxBcHBNc2cucHJvdG8SJVZyTGlmZUFQSS5OZXR3b3JraW5nLk5ldHdvcmtp",
            "bmdNb2RlbHMiqAEKBkFwcE1zZxJECgdhcHBEYXRhGAEgASgLMjEuVnJMaWZl",
            "QVBJLk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5BcHBEYXRhTXNnSAAS",
            "SgoKYXBwUGFja2FnZRgCIAEoCzI0LlZyTGlmZUFQSS5OZXR3b3JraW5nLk5l",
            "dHdvcmtpbmdNb2RlbHMuQXBwUGFja2FnZU1zZ0gAQgwKCmFwcE1zZ1R5cGUi",
            "KQoKQXBwRGF0YU1zZxINCgVhcHBJZBgBIAEoBBIMCgRkYXRhGAIgASgMIusC",
            "Cg1BcHBQYWNrYWdlTXNnElIKDnBhY2thZ2VSZXF1ZXN0GAEgASgLMjguVnJM",
            "aWZlQVBJLk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5BcHBQYWNrYWdl",
            "UmVxdWVzdEgAEk8KC3BhY2thZ2VJbmZvGAIgASgLMjguVnJMaWZlQVBJLk5l",
            "dHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5BcHBQYWNrYWdlSW5mb01zZ0gA",
            "Ek8KC3BhY2thZ2VEYXRhGAMgASgLMjguVnJMaWZlQVBJLk5ldHdvcmtpbmcu",
            "TmV0d29ya2luZ01vZGVscy5BcHBQYWNrYWdlRGF0YU1zZ0gAEk8KC3BhY2th",
            "Z2VMaXN0GAQgASgLMjguVnJMaWZlQVBJLk5ldHdvcmtpbmcuTmV0d29ya2lu",
            "Z01vZGVscy5BcHBQYWNrYWdlTGlzdE1zZ0gAQhMKEWFwcFBhY2thZ2VNc2dU",
            "eXBlIl4KEUFwcFBhY2thZ2VMaXN0TXNnEkkKCHBhY2thZ2VzGAEgAygLMjcu",
            "VnJMaWZlQVBJLk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5BcHBQYWNr",
            "YWdlTGlzdEVsIj0KEEFwcFBhY2thZ2VMaXN0RWwSDQoFYXBwSWQYASABKAQS",
            "DAoEbmFtZRgCIAEoCRIMCgRkZXNjGAMgASgJIoACChFBcHBQYWNrYWdlUmVx",
            "dWVzdBIVCgtwYWNrYWdlSW5mbxgBIAEoBEgAElYKDmRsbERhdGFSZXF1ZXN0",
            "GAIgASgLMjwuVnJMaWZlQVBJLk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVs",
            "cy5BcHBQYWNrYWdlRGF0YVJlcXVlc3RIABJWCg56aXBEYXRhUmVxdWVzdBgD",
            "IAEoCzI8LlZyTGlmZUFQSS5OZXR3b3JraW5nLk5ldHdvcmtpbmdNb2RlbHMu",
            "QXBwUGFja2FnZURhdGFSZXF1ZXN0SAASFQoLcGFja2FnZUxpc3QYBCABKAhI",
            "AEINCgtyZXF1ZXN0VHlwZSLhAQoVQXBwUGFja2FnZURhdGFSZXF1ZXN0Eg0K",
            "BWFwcElkGAEgASgEEhIKCnBhY2tldFNpemUYAiABKA0SEAoIcGFja2V0SWQY",
            "AyABKA0SYwoLcGFja2FnZVR5cGUYBCABKA4yTi5WckxpZmVBUEkuTmV0d29y",
            "a2luZy5OZXR3b3JraW5nTW9kZWxzLkFwcFBhY2thZ2VEYXRhUmVxdWVzdC5Q",
            "YWNrYWdlRGV2aWNlVHlwZSIuChFQYWNrYWdlRGV2aWNlVHlwZRINCglGT1JX",
            "QVJERVIQABIKCgZDTElFTlQQASL0AQoRQXBwUGFja2FnZUluZm9Nc2cSDQoF",
            "YXBwSWQYASABKAQSDAoEbmFtZRgCIAEoCRIMCgRkZXNjGAMgASgJEg8KB3Zl",
            "cnNpb24YBCADKAUSUQoMZGVwZW5kZW5jaWVzGAUgAygLMjsuVnJMaWZlQVBJ",
            "Lk5ldHdvcmtpbmcuTmV0d29ya2luZ01vZGVscy5BcHBQYWNrYWdlRGVwZW5k",
            "ZW5jeRIUCgxmb3J3YXJkZXJEbGwYBiABKAgSFAoMZm9yd2FyZGVyWmlwGAcg",
            "ASgIEhEKCWNsaWVudERsbBgIIAEoCBIRCgljbGllbnRaaXAYCSABKAgiOQoU",
            "QXBwUGFja2FnZURlcGVuZGVuY3kSDQoFYXBwSWQYASABKAQSEgoKbWluVmVy",
            "c2lvbhgCIAMoBSIzChFBcHBQYWNrYWdlRGF0YU1zZxIQCghjaGVja3N1bRgB",
            "IAEoBBIMCgRkYXRhGAIgASgMYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppMsg), global::VrLifeAPI.Networking.NetworkingModels.AppMsg.Parser, new[]{ "AppData", "AppPackage" }, new[]{ "AppMsgType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppDataMsg), global::VrLifeAPI.Networking.NetworkingModels.AppDataMsg.Parser, new[]{ "AppId", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageMsg), global::VrLifeAPI.Networking.NetworkingModels.AppPackageMsg.Parser, new[]{ "PackageRequest", "PackageInfo", "PackageData", "PackageList" }, new[]{ "AppPackageMsgType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageListMsg), global::VrLifeAPI.Networking.NetworkingModels.AppPackageListMsg.Parser, new[]{ "Packages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageListEl), global::VrLifeAPI.Networking.NetworkingModels.AppPackageListEl.Parser, new[]{ "AppId", "Name", "Desc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageRequest), global::VrLifeAPI.Networking.NetworkingModels.AppPackageRequest.Parser, new[]{ "PackageInfo", "DllDataRequest", "ZipDataRequest", "PackageList" }, new[]{ "RequestType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest), global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest.Parser, new[]{ "AppId", "PacketSize", "PacketId", "PackageType" }, null, new[]{ typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest.Types.PackageDeviceType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageInfoMsg), global::VrLifeAPI.Networking.NetworkingModels.AppPackageInfoMsg.Parser, new[]{ "AppId", "Name", "Desc", "Version", "Dependencies", "ForwarderDll", "ForwarderZip", "ClientDll", "ClientZip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageDependency), global::VrLifeAPI.Networking.NetworkingModels.AppPackageDependency.Parser, new[]{ "AppId", "MinVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataMsg), global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataMsg.Parser, new[]{ "Checksum", "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AppMsg : pb::IMessage<AppMsg> {
    private static readonly pb::MessageParser<AppMsg> _parser = new pb::MessageParser<AppMsg>(() => new AppMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMsg(AppMsg other) : this() {
      switch (other.AppMsgTypeCase) {
        case AppMsgTypeOneofCase.AppData:
          AppData = other.AppData.Clone();
          break;
        case AppMsgTypeOneofCase.AppPackage:
          AppPackage = other.AppPackage.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMsg Clone() {
      return new AppMsg(this);
    }

    /// <summary>Field number for the "appData" field.</summary>
    public const int AppDataFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppDataMsg AppData {
      get { return appMsgTypeCase_ == AppMsgTypeOneofCase.AppData ? (global::VrLifeAPI.Networking.NetworkingModels.AppDataMsg) appMsgType_ : null; }
      set {
        appMsgType_ = value;
        appMsgTypeCase_ = value == null ? AppMsgTypeOneofCase.None : AppMsgTypeOneofCase.AppData;
      }
    }

    /// <summary>Field number for the "appPackage" field.</summary>
    public const int AppPackageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageMsg AppPackage {
      get { return appMsgTypeCase_ == AppMsgTypeOneofCase.AppPackage ? (global::VrLifeAPI.Networking.NetworkingModels.AppPackageMsg) appMsgType_ : null; }
      set {
        appMsgType_ = value;
        appMsgTypeCase_ = value == null ? AppMsgTypeOneofCase.None : AppMsgTypeOneofCase.AppPackage;
      }
    }

    private object appMsgType_;
    /// <summary>Enum of possible cases for the "appMsgType" oneof.</summary>
    public enum AppMsgTypeOneofCase {
      None = 0,
      AppData = 1,
      AppPackage = 2,
    }
    private AppMsgTypeOneofCase appMsgTypeCase_ = AppMsgTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMsgTypeOneofCase AppMsgTypeCase {
      get { return appMsgTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAppMsgType() {
      appMsgTypeCase_ = AppMsgTypeOneofCase.None;
      appMsgType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AppData, other.AppData)) return false;
      if (!object.Equals(AppPackage, other.AppPackage)) return false;
      if (AppMsgTypeCase != other.AppMsgTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppData) hash ^= AppData.GetHashCode();
      if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppPackage) hash ^= AppPackage.GetHashCode();
      hash ^= (int) appMsgTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppData) {
        output.WriteRawTag(10);
        output.WriteMessage(AppData);
      }
      if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppPackage) {
        output.WriteRawTag(18);
        output.WriteMessage(AppPackage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppData);
      }
      if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppPackage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppPackage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppMsg other) {
      if (other == null) {
        return;
      }
      switch (other.AppMsgTypeCase) {
        case AppMsgTypeOneofCase.AppData:
          AppData = other.AppData;
          break;
        case AppMsgTypeOneofCase.AppPackage:
          AppPackage = other.AppPackage;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::VrLifeAPI.Networking.NetworkingModels.AppDataMsg subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppDataMsg();
            if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppData) {
              subBuilder.MergeFrom(AppData);
            }
            input.ReadMessage(subBuilder);
            AppData = subBuilder;
            break;
          }
          case 18: {
            global::VrLifeAPI.Networking.NetworkingModels.AppPackageMsg subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppPackageMsg();
            if (appMsgTypeCase_ == AppMsgTypeOneofCase.AppPackage) {
              subBuilder.MergeFrom(AppPackage);
            }
            input.ReadMessage(subBuilder);
            AppPackage = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  the simplest message with data for specific app by its ID
  /// </summary>
  public sealed partial class AppDataMsg : pb::IMessage<AppDataMsg> {
    private static readonly pb::MessageParser<AppDataMsg> _parser = new pb::MessageParser<AppDataMsg>(() => new AppDataMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDataMsg(AppDataMsg other) : this() {
      appId_ = other.appId_;
      data_ = other.data_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppDataMsg Clone() {
      return new AppDataMsg(this);
    }

    /// <summary>Field number for the "appId" field.</summary>
    public const int AppIdFieldNumber = 1;
    private ulong appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Data != other.Data) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId != 0UL) hash ^= AppId.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AppId);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AppId);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.AppId != 0UL) {
        AppId = other.AppId;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AppId = input.ReadUInt64();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppPackageMsg : pb::IMessage<AppPackageMsg> {
    private static readonly pb::MessageParser<AppPackageMsg> _parser = new pb::MessageParser<AppPackageMsg>(() => new AppPackageMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageMsg(AppPackageMsg other) : this() {
      switch (other.AppPackageMsgTypeCase) {
        case AppPackageMsgTypeOneofCase.PackageRequest:
          PackageRequest = other.PackageRequest.Clone();
          break;
        case AppPackageMsgTypeOneofCase.PackageInfo:
          PackageInfo = other.PackageInfo.Clone();
          break;
        case AppPackageMsgTypeOneofCase.PackageData:
          PackageData = other.PackageData.Clone();
          break;
        case AppPackageMsgTypeOneofCase.PackageList:
          PackageList = other.PackageList.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageMsg Clone() {
      return new AppPackageMsg(this);
    }

    /// <summary>Field number for the "packageRequest" field.</summary>
    public const int PackageRequestFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageRequest PackageRequest {
      get { return appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageRequest ? (global::VrLifeAPI.Networking.NetworkingModels.AppPackageRequest) appPackageMsgType_ : null; }
      set {
        appPackageMsgType_ = value;
        appPackageMsgTypeCase_ = value == null ? AppPackageMsgTypeOneofCase.None : AppPackageMsgTypeOneofCase.PackageRequest;
      }
    }

    /// <summary>Field number for the "packageInfo" field.</summary>
    public const int PackageInfoFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageInfoMsg PackageInfo {
      get { return appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageInfo ? (global::VrLifeAPI.Networking.NetworkingModels.AppPackageInfoMsg) appPackageMsgType_ : null; }
      set {
        appPackageMsgType_ = value;
        appPackageMsgTypeCase_ = value == null ? AppPackageMsgTypeOneofCase.None : AppPackageMsgTypeOneofCase.PackageInfo;
      }
    }

    /// <summary>Field number for the "packageData" field.</summary>
    public const int PackageDataFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataMsg PackageData {
      get { return appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageData ? (global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataMsg) appPackageMsgType_ : null; }
      set {
        appPackageMsgType_ = value;
        appPackageMsgTypeCase_ = value == null ? AppPackageMsgTypeOneofCase.None : AppPackageMsgTypeOneofCase.PackageData;
      }
    }

    /// <summary>Field number for the "packageList" field.</summary>
    public const int PackageListFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageListMsg PackageList {
      get { return appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageList ? (global::VrLifeAPI.Networking.NetworkingModels.AppPackageListMsg) appPackageMsgType_ : null; }
      set {
        appPackageMsgType_ = value;
        appPackageMsgTypeCase_ = value == null ? AppPackageMsgTypeOneofCase.None : AppPackageMsgTypeOneofCase.PackageList;
      }
    }

    private object appPackageMsgType_;
    /// <summary>Enum of possible cases for the "appPackageMsgType" oneof.</summary>
    public enum AppPackageMsgTypeOneofCase {
      None = 0,
      PackageRequest = 1,
      PackageInfo = 2,
      PackageData = 3,
      PackageList = 4,
    }
    private AppPackageMsgTypeOneofCase appPackageMsgTypeCase_ = AppPackageMsgTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageMsgTypeOneofCase AppPackageMsgTypeCase {
      get { return appPackageMsgTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAppPackageMsgType() {
      appPackageMsgTypeCase_ = AppPackageMsgTypeOneofCase.None;
      appPackageMsgType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PackageRequest, other.PackageRequest)) return false;
      if (!object.Equals(PackageInfo, other.PackageInfo)) return false;
      if (!object.Equals(PackageData, other.PackageData)) return false;
      if (!object.Equals(PackageList, other.PackageList)) return false;
      if (AppPackageMsgTypeCase != other.AppPackageMsgTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageRequest) hash ^= PackageRequest.GetHashCode();
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageInfo) hash ^= PackageInfo.GetHashCode();
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageData) hash ^= PackageData.GetHashCode();
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageList) hash ^= PackageList.GetHashCode();
      hash ^= (int) appPackageMsgTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(PackageRequest);
      }
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(PackageInfo);
      }
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageData) {
        output.WriteRawTag(26);
        output.WriteMessage(PackageData);
      }
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageList) {
        output.WriteRawTag(34);
        output.WriteMessage(PackageList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageRequest);
      }
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageInfo);
      }
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageData);
      }
      if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageList) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PackageList);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageMsg other) {
      if (other == null) {
        return;
      }
      switch (other.AppPackageMsgTypeCase) {
        case AppPackageMsgTypeOneofCase.PackageRequest:
          PackageRequest = other.PackageRequest;
          break;
        case AppPackageMsgTypeOneofCase.PackageInfo:
          PackageInfo = other.PackageInfo;
          break;
        case AppPackageMsgTypeOneofCase.PackageData:
          PackageData = other.PackageData;
          break;
        case AppPackageMsgTypeOneofCase.PackageList:
          PackageList = other.PackageList;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::VrLifeAPI.Networking.NetworkingModels.AppPackageRequest subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppPackageRequest();
            if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageRequest) {
              subBuilder.MergeFrom(PackageRequest);
            }
            input.ReadMessage(subBuilder);
            PackageRequest = subBuilder;
            break;
          }
          case 18: {
            global::VrLifeAPI.Networking.NetworkingModels.AppPackageInfoMsg subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppPackageInfoMsg();
            if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageInfo) {
              subBuilder.MergeFrom(PackageInfo);
            }
            input.ReadMessage(subBuilder);
            PackageInfo = subBuilder;
            break;
          }
          case 26: {
            global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataMsg subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataMsg();
            if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageData) {
              subBuilder.MergeFrom(PackageData);
            }
            input.ReadMessage(subBuilder);
            PackageData = subBuilder;
            break;
          }
          case 34: {
            global::VrLifeAPI.Networking.NetworkingModels.AppPackageListMsg subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppPackageListMsg();
            if (appPackageMsgTypeCase_ == AppPackageMsgTypeOneofCase.PackageList) {
              subBuilder.MergeFrom(PackageList);
            }
            input.ReadMessage(subBuilder);
            PackageList = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppPackageListMsg : pb::IMessage<AppPackageListMsg> {
    private static readonly pb::MessageParser<AppPackageListMsg> _parser = new pb::MessageParser<AppPackageListMsg>(() => new AppPackageListMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageListMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageListMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageListMsg(AppPackageListMsg other) : this() {
      packages_ = other.packages_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageListMsg Clone() {
      return new AppPackageListMsg(this);
    }

    /// <summary>Field number for the "packages" field.</summary>
    public const int PackagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::VrLifeAPI.Networking.NetworkingModels.AppPackageListEl> _repeated_packages_codec
        = pb::FieldCodec.ForMessage(10, global::VrLifeAPI.Networking.NetworkingModels.AppPackageListEl.Parser);
    private readonly pbc::RepeatedField<global::VrLifeAPI.Networking.NetworkingModels.AppPackageListEl> packages_ = new pbc::RepeatedField<global::VrLifeAPI.Networking.NetworkingModels.AppPackageListEl>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VrLifeAPI.Networking.NetworkingModels.AppPackageListEl> Packages {
      get { return packages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageListMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageListMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!packages_.Equals(other.packages_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= packages_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      packages_.WriteTo(output, _repeated_packages_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += packages_.CalculateSize(_repeated_packages_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageListMsg other) {
      if (other == null) {
        return;
      }
      packages_.Add(other.packages_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            packages_.AddEntriesFrom(input, _repeated_packages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppPackageListEl : pb::IMessage<AppPackageListEl> {
    private static readonly pb::MessageParser<AppPackageListEl> _parser = new pb::MessageParser<AppPackageListEl>(() => new AppPackageListEl());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageListEl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageListEl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageListEl(AppPackageListEl other) : this() {
      appId_ = other.appId_;
      name_ = other.name_;
      desc_ = other.desc_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageListEl Clone() {
      return new AppPackageListEl(this);
    }

    /// <summary>Field number for the "appId" field.</summary>
    public const int AppIdFieldNumber = 1;
    private ulong appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageListEl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageListEl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId != 0UL) hash ^= AppId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AppId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AppId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageListEl other) {
      if (other == null) {
        return;
      }
      if (other.AppId != 0UL) {
        AppId = other.AppId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AppId = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppPackageRequest : pb::IMessage<AppPackageRequest> {
    private static readonly pb::MessageParser<AppPackageRequest> _parser = new pb::MessageParser<AppPackageRequest>(() => new AppPackageRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageRequest(AppPackageRequest other) : this() {
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.PackageInfo:
          PackageInfo = other.PackageInfo;
          break;
        case RequestTypeOneofCase.DllDataRequest:
          DllDataRequest = other.DllDataRequest.Clone();
          break;
        case RequestTypeOneofCase.ZipDataRequest:
          ZipDataRequest = other.ZipDataRequest.Clone();
          break;
        case RequestTypeOneofCase.PackageList:
          PackageList = other.PackageList;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageRequest Clone() {
      return new AppPackageRequest(this);
    }

    /// <summary>Field number for the "packageInfo" field.</summary>
    public const int PackageInfoFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PackageInfo {
      get { return requestTypeCase_ == RequestTypeOneofCase.PackageInfo ? (ulong) requestType_ : 0UL; }
      set {
        requestType_ = value;
        requestTypeCase_ = RequestTypeOneofCase.PackageInfo;
      }
    }

    /// <summary>Field number for the "dllDataRequest" field.</summary>
    public const int DllDataRequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest DllDataRequest {
      get { return requestTypeCase_ == RequestTypeOneofCase.DllDataRequest ? (global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.DllDataRequest;
      }
    }

    /// <summary>Field number for the "zipDataRequest" field.</summary>
    public const int ZipDataRequestFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest ZipDataRequest {
      get { return requestTypeCase_ == RequestTypeOneofCase.ZipDataRequest ? (global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.ZipDataRequest;
      }
    }

    /// <summary>Field number for the "packageList" field.</summary>
    public const int PackageListFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PackageList {
      get { return requestTypeCase_ == RequestTypeOneofCase.PackageList ? (bool) requestType_ : false; }
      set {
        requestType_ = value;
        requestTypeCase_ = RequestTypeOneofCase.PackageList;
      }
    }

    private object requestType_;
    /// <summary>Enum of possible cases for the "requestType" oneof.</summary>
    public enum RequestTypeOneofCase {
      None = 0,
      PackageInfo = 1,
      DllDataRequest = 2,
      ZipDataRequest = 3,
      PackageList = 4,
    }
    private RequestTypeOneofCase requestTypeCase_ = RequestTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestTypeOneofCase RequestTypeCase {
      get { return requestTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestType() {
      requestTypeCase_ = RequestTypeOneofCase.None;
      requestType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PackageInfo != other.PackageInfo) return false;
      if (!object.Equals(DllDataRequest, other.DllDataRequest)) return false;
      if (!object.Equals(ZipDataRequest, other.ZipDataRequest)) return false;
      if (PackageList != other.PackageList) return false;
      if (RequestTypeCase != other.RequestTypeCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestTypeCase_ == RequestTypeOneofCase.PackageInfo) hash ^= PackageInfo.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.DllDataRequest) hash ^= DllDataRequest.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.ZipDataRequest) hash ^= ZipDataRequest.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.PackageList) hash ^= PackageList.GetHashCode();
      hash ^= (int) requestTypeCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requestTypeCase_ == RequestTypeOneofCase.PackageInfo) {
        output.WriteRawTag(8);
        output.WriteUInt64(PackageInfo);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.DllDataRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(DllDataRequest);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ZipDataRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(ZipDataRequest);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.PackageList) {
        output.WriteRawTag(32);
        output.WriteBool(PackageList);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestTypeCase_ == RequestTypeOneofCase.PackageInfo) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PackageInfo);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.DllDataRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DllDataRequest);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.ZipDataRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZipDataRequest);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.PackageList) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageRequest other) {
      if (other == null) {
        return;
      }
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.PackageInfo:
          PackageInfo = other.PackageInfo;
          break;
        case RequestTypeOneofCase.DllDataRequest:
          DllDataRequest = other.DllDataRequest;
          break;
        case RequestTypeOneofCase.ZipDataRequest:
          ZipDataRequest = other.ZipDataRequest;
          break;
        case RequestTypeOneofCase.PackageList:
          PackageList = other.PackageList;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            PackageInfo = input.ReadUInt64();
            break;
          }
          case 18: {
            global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest();
            if (requestTypeCase_ == RequestTypeOneofCase.DllDataRequest) {
              subBuilder.MergeFrom(DllDataRequest);
            }
            input.ReadMessage(subBuilder);
            DllDataRequest = subBuilder;
            break;
          }
          case 26: {
            global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest subBuilder = new global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest();
            if (requestTypeCase_ == RequestTypeOneofCase.ZipDataRequest) {
              subBuilder.MergeFrom(ZipDataRequest);
            }
            input.ReadMessage(subBuilder);
            ZipDataRequest = subBuilder;
            break;
          }
          case 32: {
            PackageList = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppPackageDataRequest : pb::IMessage<AppPackageDataRequest> {
    private static readonly pb::MessageParser<AppPackageDataRequest> _parser = new pb::MessageParser<AppPackageDataRequest>(() => new AppPackageDataRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDataRequest(AppPackageDataRequest other) : this() {
      appId_ = other.appId_;
      packetSize_ = other.packetSize_;
      packetId_ = other.packetId_;
      packageType_ = other.packageType_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDataRequest Clone() {
      return new AppPackageDataRequest(this);
    }

    /// <summary>Field number for the "appId" field.</summary>
    public const int AppIdFieldNumber = 1;
    private ulong appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "packetSize" field.</summary>
    public const int PacketSizeFieldNumber = 2;
    private uint packetSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PacketSize {
      get { return packetSize_; }
      set {
        packetSize_ = value;
      }
    }

    /// <summary>Field number for the "packetId" field.</summary>
    public const int PacketIdFieldNumber = 3;
    private uint packetId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PacketId {
      get { return packetId_; }
      set {
        packetId_ = value;
      }
    }

    /// <summary>Field number for the "packageType" field.</summary>
    public const int PackageTypeFieldNumber = 4;
    private global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest.Types.PackageDeviceType packageType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest.Types.PackageDeviceType PackageType {
      get { return packageType_; }
      set {
        packageType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (PacketSize != other.PacketSize) return false;
      if (PacketId != other.PacketId) return false;
      if (PackageType != other.PackageType) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId != 0UL) hash ^= AppId.GetHashCode();
      if (PacketSize != 0) hash ^= PacketSize.GetHashCode();
      if (PacketId != 0) hash ^= PacketId.GetHashCode();
      if (PackageType != 0) hash ^= PackageType.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AppId);
      }
      if (PacketSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PacketSize);
      }
      if (PacketId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PacketId);
      }
      if (PackageType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) PackageType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AppId);
      }
      if (PacketSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PacketSize);
      }
      if (PacketId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PacketId);
      }
      if (PackageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PackageType);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.AppId != 0UL) {
        AppId = other.AppId;
      }
      if (other.PacketSize != 0) {
        PacketSize = other.PacketSize;
      }
      if (other.PacketId != 0) {
        PacketId = other.PacketId;
      }
      if (other.PackageType != 0) {
        PackageType = other.PackageType;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AppId = input.ReadUInt64();
            break;
          }
          case 16: {
            PacketSize = input.ReadUInt32();
            break;
          }
          case 24: {
            PacketId = input.ReadUInt32();
            break;
          }
          case 32: {
            packageType_ = (global::VrLifeAPI.Networking.NetworkingModels.AppPackageDataRequest.Types.PackageDeviceType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AppPackageDataRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum PackageDeviceType {
        [pbr::OriginalName("FORWARDER")] Forwarder = 0,
        [pbr::OriginalName("CLIENT")] Client = 1,
      }

    }
    #endregion

  }

  public sealed partial class AppPackageInfoMsg : pb::IMessage<AppPackageInfoMsg> {
    private static readonly pb::MessageParser<AppPackageInfoMsg> _parser = new pb::MessageParser<AppPackageInfoMsg>(() => new AppPackageInfoMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageInfoMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageInfoMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageInfoMsg(AppPackageInfoMsg other) : this() {
      appId_ = other.appId_;
      name_ = other.name_;
      desc_ = other.desc_;
      version_ = other.version_.Clone();
      dependencies_ = other.dependencies_.Clone();
      forwarderDll_ = other.forwarderDll_;
      forwarderZip_ = other.forwarderZip_;
      clientDll_ = other.clientDll_;
      clientZip_ = other.clientZip_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageInfoMsg Clone() {
      return new AppPackageInfoMsg(this);
    }

    /// <summary>Field number for the "appId" field.</summary>
    public const int AppIdFieldNumber = 1;
    private ulong appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int DescFieldNumber = 3;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_version_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> version_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Version {
      get { return version_; }
    }

    /// <summary>Field number for the "dependencies" field.</summary>
    public const int DependenciesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::VrLifeAPI.Networking.NetworkingModels.AppPackageDependency> _repeated_dependencies_codec
        = pb::FieldCodec.ForMessage(42, global::VrLifeAPI.Networking.NetworkingModels.AppPackageDependency.Parser);
    private readonly pbc::RepeatedField<global::VrLifeAPI.Networking.NetworkingModels.AppPackageDependency> dependencies_ = new pbc::RepeatedField<global::VrLifeAPI.Networking.NetworkingModels.AppPackageDependency>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::VrLifeAPI.Networking.NetworkingModels.AppPackageDependency> Dependencies {
      get { return dependencies_; }
    }

    /// <summary>Field number for the "forwarderDll" field.</summary>
    public const int ForwarderDllFieldNumber = 6;
    private bool forwarderDll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ForwarderDll {
      get { return forwarderDll_; }
      set {
        forwarderDll_ = value;
      }
    }

    /// <summary>Field number for the "forwarderZip" field.</summary>
    public const int ForwarderZipFieldNumber = 7;
    private bool forwarderZip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ForwarderZip {
      get { return forwarderZip_; }
      set {
        forwarderZip_ = value;
      }
    }

    /// <summary>Field number for the "clientDll" field.</summary>
    public const int ClientDllFieldNumber = 8;
    private bool clientDll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClientDll {
      get { return clientDll_; }
      set {
        clientDll_ = value;
      }
    }

    /// <summary>Field number for the "clientZip" field.</summary>
    public const int ClientZipFieldNumber = 9;
    private bool clientZip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClientZip {
      get { return clientZip_; }
      set {
        clientZip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageInfoMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageInfoMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if (Name != other.Name) return false;
      if (Desc != other.Desc) return false;
      if(!version_.Equals(other.version_)) return false;
      if(!dependencies_.Equals(other.dependencies_)) return false;
      if (ForwarderDll != other.ForwarderDll) return false;
      if (ForwarderZip != other.ForwarderZip) return false;
      if (ClientDll != other.ClientDll) return false;
      if (ClientZip != other.ClientZip) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId != 0UL) hash ^= AppId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Desc.Length != 0) hash ^= Desc.GetHashCode();
      hash ^= version_.GetHashCode();
      hash ^= dependencies_.GetHashCode();
      if (ForwarderDll != false) hash ^= ForwarderDll.GetHashCode();
      if (ForwarderZip != false) hash ^= ForwarderZip.GetHashCode();
      if (ClientDll != false) hash ^= ClientDll.GetHashCode();
      if (ClientZip != false) hash ^= ClientZip.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AppId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Desc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Desc);
      }
      version_.WriteTo(output, _repeated_version_codec);
      dependencies_.WriteTo(output, _repeated_dependencies_codec);
      if (ForwarderDll != false) {
        output.WriteRawTag(48);
        output.WriteBool(ForwarderDll);
      }
      if (ForwarderZip != false) {
        output.WriteRawTag(56);
        output.WriteBool(ForwarderZip);
      }
      if (ClientDll != false) {
        output.WriteRawTag(64);
        output.WriteBool(ClientDll);
      }
      if (ClientZip != false) {
        output.WriteRawTag(72);
        output.WriteBool(ClientZip);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AppId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Desc);
      }
      size += version_.CalculateSize(_repeated_version_codec);
      size += dependencies_.CalculateSize(_repeated_dependencies_codec);
      if (ForwarderDll != false) {
        size += 1 + 1;
      }
      if (ForwarderZip != false) {
        size += 1 + 1;
      }
      if (ClientDll != false) {
        size += 1 + 1;
      }
      if (ClientZip != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageInfoMsg other) {
      if (other == null) {
        return;
      }
      if (other.AppId != 0UL) {
        AppId = other.AppId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Desc.Length != 0) {
        Desc = other.Desc;
      }
      version_.Add(other.version_);
      dependencies_.Add(other.dependencies_);
      if (other.ForwarderDll != false) {
        ForwarderDll = other.ForwarderDll;
      }
      if (other.ForwarderZip != false) {
        ForwarderZip = other.ForwarderZip;
      }
      if (other.ClientDll != false) {
        ClientDll = other.ClientDll;
      }
      if (other.ClientZip != false) {
        ClientZip = other.ClientZip;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AppId = input.ReadUInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Desc = input.ReadString();
            break;
          }
          case 34:
          case 32: {
            version_.AddEntriesFrom(input, _repeated_version_codec);
            break;
          }
          case 42: {
            dependencies_.AddEntriesFrom(input, _repeated_dependencies_codec);
            break;
          }
          case 48: {
            ForwarderDll = input.ReadBool();
            break;
          }
          case 56: {
            ForwarderZip = input.ReadBool();
            break;
          }
          case 64: {
            ClientDll = input.ReadBool();
            break;
          }
          case 72: {
            ClientZip = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppPackageDependency : pb::IMessage<AppPackageDependency> {
    private static readonly pb::MessageParser<AppPackageDependency> _parser = new pb::MessageParser<AppPackageDependency>(() => new AppPackageDependency());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageDependency> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDependency() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDependency(AppPackageDependency other) : this() {
      appId_ = other.appId_;
      minVersion_ = other.minVersion_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDependency Clone() {
      return new AppPackageDependency(this);
    }

    /// <summary>Field number for the "appId" field.</summary>
    public const int AppIdFieldNumber = 1;
    private ulong appId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AppId {
      get { return appId_; }
      set {
        appId_ = value;
      }
    }

    /// <summary>Field number for the "minVersion" field.</summary>
    public const int MinVersionFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_minVersion_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> minVersion_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MinVersion {
      get { return minVersion_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageDependency);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageDependency other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AppId != other.AppId) return false;
      if(!minVersion_.Equals(other.minVersion_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AppId != 0UL) hash ^= AppId.GetHashCode();
      hash ^= minVersion_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AppId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(AppId);
      }
      minVersion_.WriteTo(output, _repeated_minVersion_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AppId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AppId);
      }
      size += minVersion_.CalculateSize(_repeated_minVersion_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageDependency other) {
      if (other == null) {
        return;
      }
      if (other.AppId != 0UL) {
        AppId = other.AppId;
      }
      minVersion_.Add(other.minVersion_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            AppId = input.ReadUInt64();
            break;
          }
          case 18:
          case 16: {
            minVersion_.AddEntriesFrom(input, _repeated_minVersion_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppPackageDataMsg : pb::IMessage<AppPackageDataMsg> {
    private static readonly pb::MessageParser<AppPackageDataMsg> _parser = new pb::MessageParser<AppPackageDataMsg>(() => new AppPackageDataMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppPackageDataMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeAPI.Networking.NetworkingModels.AppMsgReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDataMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDataMsg(AppPackageDataMsg other) : this() {
      checksum_ = other.checksum_;
      data_ = other.data_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppPackageDataMsg Clone() {
      return new AppPackageDataMsg(this);
    }

    /// <summary>Field number for the "checksum" field.</summary>
    public const int ChecksumFieldNumber = 1;
    private ulong checksum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Checksum {
      get { return checksum_; }
      set {
        checksum_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppPackageDataMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppPackageDataMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Checksum != other.Checksum) return false;
      if (Data != other.Data) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Checksum != 0UL) hash ^= Checksum.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Checksum != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Checksum);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Checksum != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Checksum);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppPackageDataMsg other) {
      if (other == null) {
        return;
      }
      if (other.Checksum != 0UL) {
        Checksum = other.Checksum;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Checksum = input.ReadUInt64();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
