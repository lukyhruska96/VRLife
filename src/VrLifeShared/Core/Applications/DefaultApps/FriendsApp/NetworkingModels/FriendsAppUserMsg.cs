// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FriendsAppUserMsg.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace VrLifeShared.Core.Applications.DefaultApps.FriendsApp.NetworkingModels {

  /// <summary>Holder for reflection information generated from FriendsAppUserMsg.proto</summary>
  public static partial class FriendsAppUserMsgReflection {

    #region Descriptor
    /// <summary>File descriptor for FriendsAppUserMsg.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FriendsAppUserMsgReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdGcmllbmRzQXBwVXNlck1zZy5wcm90bxJGVnJMaWZlU2hhcmVkLkNvcmUu",
            "QXBwbGljYXRpb25zLkRlZmF1bHRBcHBzLkZyaWVuZHNBcHAuTmV0d29ya2lu",
            "Z01vZGVscyJlChFGcmllbmRzQXBwVXNlck1zZxIOCgZ1c2VySWQYASABKAQS",
            "EAoIdXNlcm5hbWUYAiABKAkSEAoGcm9vbUlkGAMgASgNSAASEgoKZnJpZW5k",
            "TGlzdBgEIAMoBEIICgZJblJvb21iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::VrLifeShared.Core.Applications.DefaultApps.FriendsApp.NetworkingModels.FriendsAppUserMsg), global::VrLifeShared.Core.Applications.DefaultApps.FriendsApp.NetworkingModels.FriendsAppUserMsg.Parser, new[]{ "UserId", "Username", "RoomId", "FriendList" }, new[]{ "InRoom" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FriendsAppUserMsg : pb::IMessage<FriendsAppUserMsg> {
    private static readonly pb::MessageParser<FriendsAppUserMsg> _parser = new pb::MessageParser<FriendsAppUserMsg>(() => new FriendsAppUserMsg());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendsAppUserMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::VrLifeShared.Core.Applications.DefaultApps.FriendsApp.NetworkingModels.FriendsAppUserMsgReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendsAppUserMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendsAppUserMsg(FriendsAppUserMsg other) : this() {
      userId_ = other.userId_;
      username_ = other.username_;
      friendList_ = other.friendList_.Clone();
      switch (other.InRoomCase) {
        case InRoomOneofCase.RoomId:
          RoomId = other.RoomId;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendsAppUserMsg Clone() {
      return new FriendsAppUserMsg(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private ulong userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roomId" field.</summary>
    public const int RoomIdFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint RoomId {
      get { return inRoomCase_ == InRoomOneofCase.RoomId ? (uint) inRoom_ : 0; }
      set {
        inRoom_ = value;
        inRoomCase_ = InRoomOneofCase.RoomId;
      }
    }

    /// <summary>Field number for the "friendList" field.</summary>
    public const int FriendListFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_friendList_codec
        = pb::FieldCodec.ForUInt64(34);
    private readonly pbc::RepeatedField<ulong> friendList_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> FriendList {
      get { return friendList_; }
    }

    private object inRoom_;
    /// <summary>Enum of possible cases for the "InRoom" oneof.</summary>
    public enum InRoomOneofCase {
      None = 0,
      RoomId = 3,
    }
    private InRoomOneofCase inRoomCase_ = InRoomOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InRoomOneofCase InRoomCase {
      get { return inRoomCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearInRoom() {
      inRoomCase_ = InRoomOneofCase.None;
      inRoom_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendsAppUserMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendsAppUserMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Username != other.Username) return false;
      if (RoomId != other.RoomId) return false;
      if(!friendList_.Equals(other.friendList_)) return false;
      if (InRoomCase != other.InRoomCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0UL) hash ^= UserId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (inRoomCase_ == InRoomOneofCase.RoomId) hash ^= RoomId.GetHashCode();
      hash ^= friendList_.GetHashCode();
      hash ^= (int) inRoomCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UserId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (inRoomCase_ == InRoomOneofCase.RoomId) {
        output.WriteRawTag(24);
        output.WriteUInt32(RoomId);
      }
      friendList_.WriteTo(output, _repeated_friendList_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UserId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (inRoomCase_ == InRoomOneofCase.RoomId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoomId);
      }
      size += friendList_.CalculateSize(_repeated_friendList_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendsAppUserMsg other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0UL) {
        UserId = other.UserId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      friendList_.Add(other.friendList_);
      switch (other.InRoomCase) {
        case InRoomOneofCase.RoomId:
          RoomId = other.RoomId;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            UserId = input.ReadUInt64();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 24: {
            RoomId = input.ReadUInt32();
            break;
          }
          case 34:
          case 32: {
            friendList_.AddEntriesFrom(input, _repeated_friendList_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
